/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RouteTreeImport } from './routes/routeTree'
import { Route as RootImport } from './routes/root'
import { Route as LoginImport } from './routes/login'
import { Route as ProdutosTodosProdutosImport } from './routes/produtos/todos-produtos'
import { Route as ProdutosProdutosImport } from './routes/produtos/produtos'
import { Route as ProdutosCadastroProdutoImport } from './routes/produtos/cadastro-produto'
import { Route as CategoriasTodasCategoriasImport } from './routes/categorias/todas-categorias'
import { Route as CategoriasCategoriasImport } from './routes/categorias/categorias'
import { Route as CategoriasCadastroCategoriaImport } from './routes/categorias/cadastro-categoria'

// Create/Update Routes

const RouteTreeRoute = RouteTreeImport.update({
  path: '/routeTree',
  getParentRoute: () => rootRoute,
} as any)

const RootRoute = RootImport.update({
  path: '/root',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const ProdutosTodosProdutosRoute = ProdutosTodosProdutosImport.update({
  path: '/produtos/todos-produtos',
  getParentRoute: () => rootRoute,
} as any)

const ProdutosProdutosRoute = ProdutosProdutosImport.update({
  path: '/produtos/produtos',
  getParentRoute: () => rootRoute,
} as any)

const ProdutosCadastroProdutoRoute = ProdutosCadastroProdutoImport.update({
  path: '/produtos/cadastro-produto',
  getParentRoute: () => rootRoute,
} as any)

const CategoriasTodasCategoriasRoute = CategoriasTodasCategoriasImport.update({
  path: '/categorias/todas-categorias',
  getParentRoute: () => rootRoute,
} as any)

const CategoriasCategoriasRoute = CategoriasCategoriasImport.update({
  path: '/categorias/categorias',
  getParentRoute: () => rootRoute,
} as any)

const CategoriasCadastroCategoriaRoute =
  CategoriasCadastroCategoriaImport.update({
    path: '/categorias/cadastro-categoria',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/root': {
      preLoaderRoute: typeof RootImport
      parentRoute: typeof rootRoute
    }
    '/routeTree': {
      preLoaderRoute: typeof RouteTreeImport
      parentRoute: typeof rootRoute
    }
    '/categorias/cadastro-categoria': {
      preLoaderRoute: typeof CategoriasCadastroCategoriaImport
      parentRoute: typeof rootRoute
    }
    '/categorias/categorias': {
      preLoaderRoute: typeof CategoriasCategoriasImport
      parentRoute: typeof rootRoute
    }
    '/categorias/todas-categorias': {
      preLoaderRoute: typeof CategoriasTodasCategoriasImport
      parentRoute: typeof rootRoute
    }
    '/produtos/cadastro-produto': {
      preLoaderRoute: typeof ProdutosCadastroProdutoImport
      parentRoute: typeof rootRoute
    }
    '/produtos/produtos': {
      preLoaderRoute: typeof ProdutosProdutosImport
      parentRoute: typeof rootRoute
    }
    '/produtos/todos-produtos': {
      preLoaderRoute: typeof ProdutosTodosProdutosImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  LoginRoute,
  RootRoute,
  RouteTreeRoute,
  CategoriasCadastroCategoriaRoute,
  CategoriasCategoriasRoute,
  CategoriasTodasCategoriasRoute,
  ProdutosCadastroProdutoRoute,
  ProdutosProdutosRoute,
  ProdutosTodosProdutosRoute,
])

/* prettier-ignore-end */
